openapi: 3.1.0
info:
  contact:
    email: thiengk563@gmail.com
    name: Webbythien
    url: https://webbythien.com
  license: {}
  title: "api.chat.v1"
  version: "1.0.0"
servers:
  - url: "http://localhost:{servicePort}"
    description: "Local Server"
    variables:
      servicePort:
        default: "9000"
        description: "The port number"
paths:
  /api.chat.v1.ChatAPI/UserCreateMeeting:
    post:
      tags:
        - api.chat.v1.ChatAPI
      summary: UserCreateMeeting
      operationId: api.chat.v1.ChatAPI.UserCreateMeeting
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.chat.v1.UserCreateMeetingRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.chat.v1.UserCreateMeetingResponse'
  /api.chat.v1.ChatAPI/UserJoinMeeting:
    post:
      tags:
        - api.chat.v1.ChatAPI
      summary: UserJoinMeeting
      description: |-
        rpc TestAPI(TestAPIRequest) returns (TestAPIResponse) {} // POST
         rpc GetMeeting(GetMeetingRequest) returns (GetMeetingResponse) {
             option idempotency_level = NO_SIDE_EFFECTS;
         }
      operationId: api.chat.v1.ChatAPI.UserJoinMeeting
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.chat.v1.UserJoinMeetingRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.chat.v1.UserJoinMeetingResponse'
components:
  schemas:
    api.chat.v1.Participant:
      type: object
      properties:
        userId:
          type: string
          title: user_id
        role:
          type: string
          title: role
      title: Participant
      additionalProperties: false
    api.chat.v1.UserCreateMeetingRequest:
      type: object
      properties:
        title:
          type: string
          title: title
      title: UserCreateMeetingRequest
      additionalProperties: false
    api.chat.v1.UserCreateMeetingResponse:
      type: object
      properties:
        meetingId:
          type: string
          title: meeting_id
      title: UserCreateMeetingResponse
      additionalProperties: false
    api.chat.v1.UserJoinMeeting:
      type: object
      properties:
        participants:
          type: array
          items:
            $ref: '#/components/schemas/api.chat.v1.Participant'
          title: participants
      title: UserJoinMeeting
      additionalProperties: false
    api.chat.v1.UserJoinMeetingRequest:
      type: object
      properties:
        meetingId:
          type: string
          title: meeting_id
        sdpOffer:
          type: string
          title: sdp_offer
      title: UserJoinMeetingRequest
      additionalProperties: false
    api.chat.v1.UserJoinMeetingResponse:
      type: object
      properties:
        message:
          type: string
          title: message
      title: UserJoinMeetingResponse
      additionalProperties: false
    connect-protocol-version:
      type: number
      title: Connect-Protocol-Version
      enum:
        - 1
      description: Define the version of the Connect protocol
      const: 1
    connect-timeout-header:
      type: number
      title: Connect-Timeout-Ms
      description: Define the timeout, in ms
    connect.error:
      type: object
      properties:
        code:
          type: string
          examples:
            - not_found
          enum:
            - canceled
            - unknown
            - invalid_argument
            - deadline_exceeded
            - not_found
            - already_exists
            - permission_denied
            - resource_exhausted
            - failed_precondition
            - aborted
            - out_of_range
            - unimplemented
            - internal
            - unavailable
            - data_loss
            - unauthenticated
          description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
        detail:
          $ref: '#/components/schemas/google.protobuf.Any'
      title: Connect Error
      additionalProperties: true
      description: 'Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation'
    google.protobuf.Any:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
          format: binary
        debug:
          type: object
          additionalProperties: true
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      in: header
      name: Authorization
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
    CookieAuth:
      type: apiKey
      scheme: bearer
      in: cookie
      name: accessToken
tags:
  - name: api.chat.v1.ChatAPI
security: []
